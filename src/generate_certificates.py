"""
Generate client and server CURVE certificate files then move them into the
appropriate store directory, private_keys or public_keys. The certificates
generated by this script are used by the stonehouse and ironhouse examples.
In practice this would be done by hand or some out-of-band process.
Author: Chris Laws
"""

import os
import shutil

import zmq.auth

from core.config import settings


def generate_certificates():
    """Generate client and server CURVE certificate"""

    # Create directories for certificates, remove old content if necessary
    for _dir in [settings.KEYS_DIR, settings.PUBLIC_KEYS_DIR, settings.SECRET_KEYS_DIR]:
        if os.path.exists(_dir):
            shutil.rmtree(_dir)
        os.mkdir(_dir)

    # create new keys in certificates dir
    zmq.auth.create_certificates(settings.KEYS_DIR, "server")
    zmq.auth.create_certificates(settings.KEYS_DIR, "client")

    # move public keys to appropriate directory
    for key_file in os.listdir(settings.KEYS_DIR):
        if key_file.endswith(".key"):
            shutil.move(settings.KEYS_DIR / key_file, settings.PUBLIC_KEYS_DIR / ".")

    # move secret keys to appropriate directory
    for key_file in os.listdir(settings.KEYS_DIR):
        if key_file.endswith(".key_secret"):
            shutil.move(settings.KEYS_DIR / key_file, settings.SECRET_KEYS_DIR / ".")


if __name__ == "__main__":
    if zmq.zmq_version_info() < (4, 0):
        raise RuntimeError(
            "Security is not supported in libzmq version < 4.0. libzmq version {0}".format(
                zmq.zmq_version()
            )
        )

    generate_certificates()
